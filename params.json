{"name":"iOS App Development with Swift","tagline":"Harvard Pre-College Program CSCI P-14600, Session II","body":"### Jump to:\r\n**Week 0:** [Day 0](#day-0), [Day 1](#day-1), [Day 2](#day-2), [Day 3](#day-3), [Day 4](#day-4)  \r\n**Week 1:** [Day 5](#day-5)\r\n\r\n## Description\r\nThis course is an introduction to programming using Swift, Apple's new programming language for Macs and iOS devices. Through Swift, we explore the basics of programming and introduce fundamental computer science topics like abstraction, algorithms, basic data structures, and recursion. The course also features practical programming topics such as scripting, command line interfaces, application programming interfaces, debugging, integrated development environments, understanding documentation, and developing software both in isolation and as a team. By the end, each student designs and implements an app that can be deployed to iOS devices, like an iPhone or an iPad. Students must bring a MacBook Air or MacBook Pro running Mac OS10.10 or higher. You may also wish to bring an iOS device running iOS 7 or later to run your apps, but this is not required. No prior programming experience is assumed.\r\n\r\n## Schedule\r\nThis course is held during Session II of the 2015 Harvard Pre-College Program which runs from Monday, 13 July through Friday, 24 July. Class is held Monday through Friday from 8:30am to 11:30am in [Pierce Hall 301](https://map.cs50.net/435). \r\n\r\n## Office Hours\r\nOffice hours begin Tuesday, 14 July. The below schedule is subject to change, depending on need and attendance.\r\n\r\nTF|Time|Location\r\n----|----|--------\r\nDino|5-7pm|Annenberg\r\nCheng|9-11pm|Inn\r\n\r\n### Day 0\r\n_Monday, 13 July._ Abstraction, algorithms, pseudocode, source code, compilation and interpretation. Basics of imperative programming with a [block language](http://snap.berkeley.edu/) including: statements, types, loops, boolean expressions, conditions, functions, arrays. Swift basics.\r\n\r\n#### Source code\r\n[The Swift Basics code is available here](https://raw.githubusercontent.com/danallan/swift-precop/master/day-0/Basics.playground/Contents.swift).\r\n\r\n#### Homework Due\r\n1. Install OS X 10.10.4 and Xcode 6.4 for class\r\n1. [Fill out pre-survey](http://bit.ly/swift-presurvey)\r\n1. [Sign up for a **free** Apple Developer Account (do not sign up for the $100 account!)](https://developer.apple.com/membercenter/)\r\n\r\n#### Exercises for tomorrow\r\nBegin with number 1, and work your way down. Complete at least 2 by class time tomorrow!\r\n\r\n- _Temperature conversion._ Create a new playground and save it as \"Celsius\". In this playground, write a few lines of code that converts a variable containing some degrees in Fahrenheit, called `f`, to Celsius. And then implement the reverse, to convert back! Be sure to test your code. Below is a code fragment to get you started.\r\n```swift\r\n// YOUR NAME HERE\r\n// you@email.com\r\n//\r\n// Fahrenheit converter\r\n    \r\nvar f = 32\r\nlet Celsius = // your code here, using the `f` variable\r\n\r\nvar c = 10\r\nlet Fahrenheit = // your reverse code here\r\n```\r\n\r\n- _Diamonds._ In a new playground called `Diamond`, generate a Diamond using Swift as shown below. Don't forget to open the console by opening the Assistant Editor in the following menu: **View** > **Assistant Editor** > **Show Assistant Editor**.\r\n\r\n![diamond](images/diamond.png)\r\n\r\nThe input should be the number of lines. To get you started, begin with this:\r\n```swift\r\n// YOUR NAME HERE\r\n// you@email.com\r\n//\r\n// Diamonds!\r\n\r\nlet NUM_LINES = 11\r\n\r\n// for loops here \r\n```\r\n\r\nBe sure to pay close attention to how many stars are on each line. Use `for` loops to create this design! You might first try creating pyramid shapes to get started:\r\n\r\n![pyramid](images/pyramid.png)\r\n\r\nHint: you may need to use both the `print()` function (which prints out a string *without* going to a newline) and the `println()` function (which prints out a string and then prints a newline). \r\n\r\n- _Credit card verification._ If you want to ramp up the challenge, attempt the following (only in the \"Bad Credit\" section) but in Swift, rather than C!\r\n[Bad Credit](https://cdn.cs50.net/2015/spring/psets/1/hacker1/hacker1.html#bad_credit)\r\n\r\n_Note:_ Swift doesn't (easily) allow for input from standard in, so don't use the `GetLongLong` function (which doesn't exist anyway). Instead, just input it as a 64-bit int like so:\r\n\r\n```swift\r\nlet card = 378282246310005\r\n```\r\n\r\n### Day 1\r\n_Tuesday, 14 July._ Theory of computation, programming paradigms. More Swift topics including data types, arrays, and functions. Split the class into two groups: those with significant prior experience (_Kirkland_ group) and those that are newer to programming (_Eliot_ group).\r\n\r\n#### Source code\r\n1. [Types](https://raw.githubusercontent.com/danallan/swift-precop/master/day-1/0-types.playground/Contents.swift)\r\n1. [Arrays](https://raw.githubusercontent.com/danallan/swift-precop/master/day-1/1-arrays.playground/Contents.swift)\r\n1. [Functions](https://raw.githubusercontent.com/danallan/swift-precop/master/day-1/2-functions.playground/Contents.swift)\r\n1. [Optionals](https://raw.githubusercontent.com/danallan/swift-precop/master/day-1/3-optionals.playground/Contents.swift)\r\n\r\n#### Homework Due\r\n1. Homework exercises from [Day 0](#day-0). If you have lots of prior experience, complete all 3. If less experience, complete at least 2.\r\n\r\n### Day 2\r\nAlgorithmic complexity, parallelism. We'll then split into groups to work on exercises or projects and receive individual lessons tailored to each group.\r\n* _Eliot:_ Loops, exercise review, how to approach looping problems.\r\n* _Kirkland:_ Version control and Git.\r\n\r\n#### Source Code\r\n1. _Eliot:_ [Dan's Diamond solution](https://raw.githubusercontent.com/danallan/swift-precop/master/day-2/dan-diamond.playground/Contents.swift). [Cheng's Diamond solution](https://raw.githubusercontent.com/danallan/swift-precop/master/day-2/cheng-diamond.playground/Contents.swift).\r\n\r\n#### Homework Due\r\n1. _Eliot:_ Complete all 3 exercises from [Day 0](#day-0).\r\n1. _Kirkland:_ attempt to have an iOS app up that displays a [Fifteen puzzle](http://migo.sixbit.org/puzzles/fifteen/) on the screen. Contact [Dan](mailto:danallan@cs.harvard.edu) or Cheng during OHs at the Inn with your Apple Developer account email address to be added to the course's iOS Developer Program.\r\n\r\n### Day 3\r\n* _Eliot:_ Functions, dictionaries. Exercises: [Function exercises by Cheng](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/eliot-1.playground/Contents.swift)\r\n* _Kirkland:_ Setup Xcode with iPhones to run development programs on devices. More advanced Swift syntax, including: closures, lambdas, defining new operators and higher-order functions.\r\n\r\n#### Source Code\r\n* _Kirkland:_ [Closures](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/k-0-closure.playground/section-1.swift), [Lambda-1](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/k-1-lambda.playground/section-1.swift), [Lambda-2](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/k-2-lambda.playground/section-1.swift), [Lambda-3](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/k-3-lambda.playground/section-1.swift), [New Operators](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/k-4-new_operator.playground/section-1.swift), [HOFs-1](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/k-5-hofs.playground/section-1.swift), [HOFs-2](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/k-6-hofs.playground/section-1.swift).\r\n\r\n#### Homework Due\r\n* _Eliot:_ The ultimate goal is to modify the Diamond code so that it is both hollow and, around the edge, lies a string. It should look like this:\r\n\r\n![Diamond String](images/diamond-str.png)\r\n\r\nYou might begin, however, by trying to modify your existing Diamond code to look like the following:\r\n\r\n![Diamond Hollow](images/diamond-hollow.png)\r\n\r\nFor intermediate practice, try to take a string and make a square like this:\r\n\r\n![Square String](images/square-str.png)\r\n\r\n* _Kirkland:_ Practice with Git using the [GitHub repo](http://github.com/danallan/swift-kirkland) that we created in class, creating your own, and working on code simultaneously.\r\n\r\n### Day 4\r\n* _Eliot:_ [Binary](https://cs50-development-projects-hahakumquat1.c9.io/binary_bulbs/public/), ASCII. Exercises in encryption: [Crypto](https://raw.githubusercontent.com/danallan/swift-precop/master/day-4/eliot-crypto.playground/Contents.swift), [Caesar cipher](https://raw.githubusercontent.com/danallan/swift-precop/master/day-4/eliot-caesar.playground/Contents.swift).\r\n* _Kirkland:_ [MapReduce](https://github.com/danallan/swift-precop/blob/master/day-4/kirkland-mapreduce.zip). Code review. iOS.\r\n\r\n#### Homework Due\r\n* _Eliot:_ Complete [Day 3's in-class exercises](https://raw.githubusercontent.com/danallan/swift-precop/master/day-3/eliot-1.playground/Contents.swift). Be sure you're completely up-to-date with *all* other assignments, like all versions of Diamond. Attempt to implement [Bubble sort](https://github.com/danallan/swift-precop/blob/master/day-3/eliot-bubble.playground/Contents.swift).\r\n\r\n### Day 5\r\n* _Eliot:_ Game of Fifteen, Xcode, iOS.\r\n* _Kirkland:_ Code review, project review. Possibly start new projects.\r\n\r\n#### Homework Due\r\n* _Eliot:_ Except for credit card, complete any remaining incomplete Week 0 exercises and homework (even bubble sort!). Begin [Game of Fifteen](https://github.com/danallan/swift-precop/blob/master/day-5/Game%20of%20Fifteen.playground.zip) exercise set.\r\n* _Kirkland:_ Polish Game of Fifteen.\r\n\r\n## Staff\r\n![Dan](http://www.gravatar.com/avatar/18ab7e51859c303fd34aae011de9f326?s=200&d=retro)|![Cheng](http://www.gravatar.com/avatar/0176d3b0acb07b071a01a425fc189909?s=200&d=retro)|![Dino](http://www.gravatar.com/avatar/6898642ee7291b6fa52f43768358b4d3?s=200&d=retro)\r\n----|----|----\r\n**Dan Armendariz**|**Cheng Gong**|**Dino Rodriguez**\r\nInstructor|Teaching Fellow|Teaching Fellow\r\n[Email](mailto:danallan@cs.harvard.edu)|[Email](mailto:cheng@cs50.harvard.edu)|[Email](mailto:dinorodriguez@college.harvard.edu)\r\n[Web](http://www.danallan.net), [Instagram](https://instagram.com/danallan)||","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}